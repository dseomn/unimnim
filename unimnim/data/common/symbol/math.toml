# SPDX-FileCopyrightText: 2025 David Mandelberg <david@mandelberg.org>
#
# SPDX-License-Identifier: CC0-1.0 OR Apache-2.0

# This file combines base symbols from a mix of math and programming:
#
# "!": not
# "&": and
# "*": multiplication
# "+": addition
# "-": subtraction
# "/": division
# "<": less
# "=": equality
# ">": greater
# "|": or
#
# With suffixes:
#
# "/": double-struck
# "O": circled
# "f": fraction
# "l": logic
# "n": n-ary
# "s": set
# "v": vector

prefix = "CM"

[base]
"+" = "U+002B PLUS SIGN: +"
"<" = "U+003C LESS-THAN SIGN: <"
"=" = "U+003D EQUALS SIGN: ="
">" = "U+003E GREATER-THAN SIGN: >"
"!l" = "U+00AC NOT SIGN: ¬¨"
"+-" = "U+00B1 PLUS-MINUS SIGN: ¬±"
"*" = "U+00D7 MULTIPLICATION SIGN: √ó"
"/.." = "U+00F7 DIVISION SIGN: √∑"  # suboptimal
"/f" = "U+2044 FRACTION SLASH: ‚ÅÑ"
"-.." = "U+2052 COMMERCIAL MINUS SIGN: ‚Åí"  # suboptimal
"lC/" = "U+2102 DOUBLE-STRUCK CAPITAL C: ‚ÑÇ"  # based-on=latin
"lH/" = "U+210D DOUBLE-STRUCK CAPITAL H: ‚Ñç"  # based-on=latin
"lN/" = "U+2115 DOUBLE-STRUCK CAPITAL N: ‚Ñï"  # based-on=latin
"lP/" = "U+2119 DOUBLE-STRUCK CAPITAL P: ‚Ñô"  # based-on=latin
"lQ/" = "U+211A DOUBLE-STRUCK CAPITAL Q: ‚Ñö"  # based-on=latin
"lR/" = "U+211D DOUBLE-STRUCK CAPITAL R: ‚Ñù"  # based-on=latin
"lZ/" = "U+2124 DOUBLE-STRUCK CAPITAL Z: ‚Ñ§"  # based-on=latin
"ha" = "U+2135 ALEF SYMBOL: ‚Ñµ"  #  based-on=hebrew
"hv" = "U+2136 BET SYMBOL: ‚Ñ∂"  #  based-on=hebrew
"hg" = "U+2137 GIMEL SYMBOL: ‚Ñ∑"  #  based-on=hebrew
"hd" = "U+2138 DALET SYMBOL: ‚Ñ∏"  #  based-on=hebrew
"gp/" = "U+213C DOUBLE-STRUCK SMALL PI: ‚Ñº"  # based-on=greek
"gg/" = "U+213D DOUBLE-STRUCK SMALL GAMMA: ‚ÑΩ"  # based-on=greek
"gG/" = "U+213E DOUBLE-STRUCK CAPITAL GAMMA: ‚Ñæ"  # based-on=greek
"gP/" = "U+213F DOUBLE-STRUCK CAPITAL PI: ‚Ñø"  # based-on=greek
"+n/" = "U+2140 DOUBLE-STRUCK N-ARY SUMMATION: ‚ÖÄ"
"0s" = "U+2205 EMPTY SET: ‚àÖ"
"*n" = "U+220F N-ARY PRODUCT: ‚àè"
"+n" = "U+2211 N-ARY SUMMATION: ‚àë"
"-" = "U+2212 MINUS SIGN: ‚àí"
"-+" = "U+2213 MINUS-OR-PLUS SIGN: ‚àì"
"/" = "U+2215 DIVISION SLASH: ‚àï"
"-s" = "U+2216 SET MINUS: ‚àñ"
"&l" = "U+2227 LOGICAL AND: ‚àß"
"|l" = "U+2228 LOGICAL OR: ‚à®"
"&s" = "U+2229 INTERSECTION: ‚à©"
"|s" = "U+222A UNION: ‚à™"
"/:" = "U+2236 RATIO: ‚à∂"  # suboptimal
"*O" = "U+2297 CIRCLED TIMES: ‚äó"
"*." = "U+22C5 DOT OPERATOR: ‚ãÖ"
"/)" = "U+27CC LONG DIVISION: ‚üå"
"*v" = "U+2A2F VECTOR OR CROSS PRODUCT: ‚®Ø"
"lA/" = "U+1D538 MATHEMATICAL DOUBLE-STRUCK CAPITAL A: ùî∏"  # based-on=latin
"lB/" = "U+1D539 MATHEMATICAL DOUBLE-STRUCK CAPITAL B: ùîπ"  # based-on=latin
"lD/" = "U+1D53B MATHEMATICAL DOUBLE-STRUCK CAPITAL D: ùîª"  # based-on=latin
"lE/" = "U+1D53C MATHEMATICAL DOUBLE-STRUCK CAPITAL E: ùîº"  # based-on=latin
"lF/" = "U+1D53D MATHEMATICAL DOUBLE-STRUCK CAPITAL F: ùîΩ"  # based-on=latin
"lG/" = "U+1D53E MATHEMATICAL DOUBLE-STRUCK CAPITAL G: ùîæ"  # based-on=latin
"lI/" = "U+1D540 MATHEMATICAL DOUBLE-STRUCK CAPITAL I: ùïÄ"  # based-on=latin
"lJ/" = "U+1D541 MATHEMATICAL DOUBLE-STRUCK CAPITAL J: ùïÅ"  # based-on=latin
"lK/" = "U+1D542 MATHEMATICAL DOUBLE-STRUCK CAPITAL K: ùïÇ"  # based-on=latin
"lL/" = "U+1D543 MATHEMATICAL DOUBLE-STRUCK CAPITAL L: ùïÉ"  # based-on=latin
"lM/" = "U+1D544 MATHEMATICAL DOUBLE-STRUCK CAPITAL M: ùïÑ"  # based-on=latin
"lO/" = "U+1D546 MATHEMATICAL DOUBLE-STRUCK CAPITAL O: ùïÜ"  # based-on=latin
"lS/" = "U+1D54A MATHEMATICAL DOUBLE-STRUCK CAPITAL S: ùïä"  # based-on=latin
"lT/" = "U+1D54B MATHEMATICAL DOUBLE-STRUCK CAPITAL T: ùïã"  # based-on=latin
"lU/" = "U+1D54C MATHEMATICAL DOUBLE-STRUCK CAPITAL U: ùïå"  # based-on=latin
"lV/" = "U+1D54D MATHEMATICAL DOUBLE-STRUCK CAPITAL V: ùïç"  # based-on=latin
"lW/" = "U+1D54E MATHEMATICAL DOUBLE-STRUCK CAPITAL W: ùïé"  # based-on=latin
"lX/" = "U+1D54F MATHEMATICAL DOUBLE-STRUCK CAPITAL X: ùïè"  # based-on=latin
"lY/" = "U+1D550 MATHEMATICAL DOUBLE-STRUCK CAPITAL Y: ùïê"  # based-on=latin
"la/" = "U+1D552 MATHEMATICAL DOUBLE-STRUCK SMALL A: ùïí"  # based-on=latin
"lb/" = "U+1D553 MATHEMATICAL DOUBLE-STRUCK SMALL B: ùïì"  # based-on=latin
"lc/" = "U+1D554 MATHEMATICAL DOUBLE-STRUCK SMALL C: ùïî"  # based-on=latin
"ld/" = "U+1D555 MATHEMATICAL DOUBLE-STRUCK SMALL D: ùïï"  # based-on=latin
"le/" = "U+1D556 MATHEMATICAL DOUBLE-STRUCK SMALL E: ùïñ"  # based-on=latin
"lf/" = "U+1D557 MATHEMATICAL DOUBLE-STRUCK SMALL F: ùïó"  # based-on=latin
"lg/" = "U+1D558 MATHEMATICAL DOUBLE-STRUCK SMALL G: ùïò"  # based-on=latin
"lh/" = "U+1D559 MATHEMATICAL DOUBLE-STRUCK SMALL H: ùïô"  # based-on=latin
"li/" = "U+1D55A MATHEMATICAL DOUBLE-STRUCK SMALL I: ùïö"  # based-on=latin
"lj/" = "U+1D55B MATHEMATICAL DOUBLE-STRUCK SMALL J: ùïõ"  # based-on=latin
"lk/" = "U+1D55C MATHEMATICAL DOUBLE-STRUCK SMALL K: ùïú"  # based-on=latin
"ll/" = "U+1D55D MATHEMATICAL DOUBLE-STRUCK SMALL L: ùïù"  # based-on=latin
"lm/" = "U+1D55E MATHEMATICAL DOUBLE-STRUCK SMALL M: ùïû"  # based-on=latin
"ln/" = "U+1D55F MATHEMATICAL DOUBLE-STRUCK SMALL N: ùïü"  # based-on=latin
"lo/" = "U+1D560 MATHEMATICAL DOUBLE-STRUCK SMALL O: ùï†"  # based-on=latin
"lp/" = "U+1D561 MATHEMATICAL DOUBLE-STRUCK SMALL P: ùï°"  # based-on=latin
"lq/" = "U+1D562 MATHEMATICAL DOUBLE-STRUCK SMALL Q: ùï¢"  # based-on=latin
"lr/" = "U+1D563 MATHEMATICAL DOUBLE-STRUCK SMALL R: ùï£"  # based-on=latin
"ls/" = "U+1D564 MATHEMATICAL DOUBLE-STRUCK SMALL S: ùï§"  # based-on=latin
"lt/" = "U+1D565 MATHEMATICAL DOUBLE-STRUCK SMALL T: ùï•"  # based-on=latin
"lu/" = "U+1D566 MATHEMATICAL DOUBLE-STRUCK SMALL U: ùï¶"  # based-on=latin
"lv/" = "U+1D567 MATHEMATICAL DOUBLE-STRUCK SMALL V: ùïß"  # based-on=latin
"lw/" = "U+1D568 MATHEMATICAL DOUBLE-STRUCK SMALL W: ùï®"  # based-on=latin
"lx/" = "U+1D569 MATHEMATICAL DOUBLE-STRUCK SMALL X: ùï©"  # based-on=latin
"ly/" = "U+1D56A MATHEMATICAL DOUBLE-STRUCK SMALL Y: ùï™"  # based-on=latin
"lz/" = "U+1D56B MATHEMATICAL DOUBLE-STRUCK SMALL Z: ùï´"  # based-on=latin
"0/" = "U+1D7D8 MATHEMATICAL DOUBLE-STRUCK DIGIT ZERO: ùüò"
"1/" = "U+1D7D9 MATHEMATICAL DOUBLE-STRUCK DIGIT ONE: ùüô"
"2/" = "U+1D7DA MATHEMATICAL DOUBLE-STRUCK DIGIT TWO: ùüö"
"3/" = "U+1D7DB MATHEMATICAL DOUBLE-STRUCK DIGIT THREE: ùüõ"
"4/" = "U+1D7DC MATHEMATICAL DOUBLE-STRUCK DIGIT FOUR: ùüú"
"5/" = "U+1D7DD MATHEMATICAL DOUBLE-STRUCK DIGIT FIVE: ùüù"
"6/" = "U+1D7DE MATHEMATICAL DOUBLE-STRUCK DIGIT SIX: ùüû"
"7/" = "U+1D7DF MATHEMATICAL DOUBLE-STRUCK DIGIT SEVEN: ùüü"
"8/" = "U+1D7E0 MATHEMATICAL DOUBLE-STRUCK DIGIT EIGHT: ùü†"
"9/" = "U+1D7E1 MATHEMATICAL DOUBLE-STRUCK DIGIT NINE: ùü°"

[combining.name_regex_replace]
"O" = [
  ['.*', 'CIRCLED \g<0>'],
  ['(.*) SIGN', 'CIRCLED \g<1>'],
]
"n" = [['.*', 'N-ARY \g<0>']]
